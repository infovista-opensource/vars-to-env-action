name: "e2e"
on:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  test-exclude:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Export secrets to env variables (with exclude)
        uses: ./
        with:
          secrets: ${{ toJSON(vars) }}
          exclude: non-existent,SECRET_2,PFX_+
          tracelog: 'true'
      - name: Verify secrets to env variables (with exclude)
        run: |
          [[ "${SECRET_2}" != "" ]] && echo "SECRET_2 should be unset, got ${SECRET_2}" && exit 1
          [[ "${PFX_VAR2}" != "" ]] && echo "PFX_VAR2 should be unset, got ${PFX_VAR2}" && exit 1
          [[ "${SECRET_3}" != "VALUE_3" ]] && echo "Could not export SECRET_3 secret, value is ${SECRET_3}" && exit 1
          true
        shell: bash

  test-include-prefix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Export secrets to env variables (with prefix, include)
        uses: ./
        with:
          prefix: PREF_
          tracelog: 'true'
          secrets: ${{ toJSON(vars) }}
          include: non-existent, SECRET_1
      - name: Verify secrets to env variables (with prefix, include)
        run: |
          [[ "${SECRET_1}" != "" ]] && echo "SECRET_1 should be unset, got ${SECRET_1}" && exit 1
          [[ "${PREF_SECRET_1}" != "VALUE_1" ]] && echo "Could not export SECRET_1 secret, value is ${SECRET_1}" && exit 1
          [[ "${SECRET_2}" != "" ]] && echo "SECRET_2 should be unset, got ${SECRET_2}" && exit 1
          [[ "${SECRET_3}" != "" ]] && echo "SECRET_3 should be unset, got ${SECRET_3}" && exit 1
          [[ "${PREF_SECRET_2}" != "" ]] && echo "PREF_SECRET_2 should be unset, got ${PREF_SECRET_2}" && exit 1
          [[ "${PREF_SECRET_3}" != "" ]] && echo "PREF_SECRET_3 should be unset, got ${PREF_SECRET_3}" && exit 1
          true
        shell: bash

  test-remove-prefix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Export variables to env variables with prefix removal
        uses: ./
        with:
          removeprefix: PFX_
          tracelog: 'true'
          include: PFX_.+
          secrets: ${{ toJSON(vars) }}
      - name: Verify secrets to env variables (with prefix removal)
        run: |
          [[ "${PFX_VAR1}" != "" ]] && echo "PFX_VAR1 should be unset, got ${PFX_VAR1}" && exit 1
          [[ "${PFX_VAR2}" != "" ]] && echo "PFX_VAR2 should be unset, got ${PFX_VAR2}" && exit 1
          [[ "${VAR1}" != "var1" ]] && echo "Could not export VAR1 secret, value is ${PFX_VAR1}" && exit 1
          [[ "${VAR2}" != "var2" ]] && echo "Could not export VAR2 variable, value is ${PFX_VAR2}" && exit 1
          true
        shell: bash

  test-dont-override:
    runs-on: ubuntu-latest
    env:
      SECRET_1: DONT_OVERRIDE
    steps:
      - uses: actions/checkout@v4
      - name: Export secrets to env variables (without override)
        uses: ./
        with:
          tracelog: 'true'
          secrets: ${{ toJSON(vars) }}
          include: SECRET_1
      - name: Verify secrets to env variables (without override)
        run: |
          [[ "${SECRET_1}" != "DONT_OVERRIDE" ]] && echo "Override test failed" && exit 1
          true
        shell: bash

  test-convert:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Export secrets to env variables (convert)
        uses: ./
        with:
          tracelog: 'true'
          convert: lower
          secrets: ${{ toJSON(vars) }}
      - name: Verify secrets to env variables (convert)
        run: |
          [[ "${secret_1}" != "VALUE_1" ]] && echo "Could not export secret_1 secret, value is ${secret_1}" && exit 1
          [[ "${secret_2}" != "VALUE_2" ]] && echo "Could not export secret_2 secret, value is ${secret_2}" && exit 1
          [[ "${secret_3}" != "VALUE_3" ]] && echo "Could not export secret_3 secret, value is ${secret_3}" && exit 1
          true
        shell: bash

  # These jobs always fail, for now we just use it to check if the output is the expected
  test-errors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bad secrets
        uses: ./
        with:
          secrets: asdf
        continue-on-error: true
      - name: Bad convert value
        uses: ./
        with:
          convert: bad
          secrets: ${{ toJSON(secrets) }}
        continue-on-error: true
